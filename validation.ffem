//validation.ffem
mesh Th = readmesh("Maillage/m4.msh");
int codeDir = 1;
func u = 1.0+sin(0.5*pi*x) + n * (x - 4.0) * cos (0.5 * pi * y) // validation_pen = même chose mais avec fourier-robin 
func f = ;
func uE = 1.0;

fespace Vh(Th,P1); //Espace EF-P1
Vh uh, vh; //inconnue & Fct test
problem PBLAPLACE(uh, vh, solver=Cholesky) = 
    int2d(Th)(dx(Uh)*dx(Vh)+dy(Uh)*dy(Vh)) 
    - int2d(Th)(f*vh) 
    + on (CodeDir, uh=uE);//décla = FV
PBLAPLACE;//Appel au solver EF => calcul de uh

//Calcul d'Erreurs : 
varf b(uh,vh) = int2d(Th)
                (dx(uh)*dx(vh)
                +dy(uh)*dy(vh)); //forme bilinéaire
matrix K = b(Vh,Vh); //matrice de rigidité 
Vh KEh, Eh = h-uh;
KEh[] = K * Eh[];
real eh = sqrt(Eh[]'*KEh[]); // ' == transposé 
cout << "eh = |u - uh|_H1 = " << eh << endl;

plot(Th,uh,cmm = "Solution EF-P1 uh");

//quand on voit le graphique ? -> l'aide
//                           f -> niveau de couleur / chaleur 
//                           N -> augmenter le niveau de couleur (la précision)w 
//                           m -> Montrer ou cacher le maillage 
//                           3 -> Passer en 3D 
//                           v -> 
// sequence f m v 3 N 
